{"version":3,"sources":["components/Scoreboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","MCCell","WinnerCell","StyledTableRow","root","action","hover","TableRow","process","data","console","log","players","name","G1","G2","dict","player","map","x","first_name","last_name","forEach","g1info","g2info","G1R","pos","G1Score","topar","thru","G2R","G2Score","G1Calc","parseInt","replace","G2Calc","newStatus","round2","total","AllUpScore","sort","a","b","myComponent","props","state","leaderboard","fetch","then","response","json","setState","this","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","row","scope","React","Component","App","className","Container","maxWidth","Scoreboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c16aeca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n/* tslint:disable */\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\n\r\nconst MCCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: '#f44336',\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n      backgroundColor: '#f44336'\r\n    },\r\n  }))(TableCell);\r\n\r\n  const WinnerCell = withStyles((theme) => ({\r\n      head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: '#ffef62',\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n        backgroundColor: '#ffef62'\r\n      },\r\n    }))(TableCell);\r\n  \r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nfunction process(data) {\r\n    console.log(data);\r\n   // console.log(data.data.player);\r\n    var players = [\r\n        {name: 'Jordan', G1: 'Scottie Scheffler', G2:'Nick Taylor'},\r\n        {name: 'Tyler', G1: 'Rory McIlroy', G2:'Sam Burns'},\r\n        {name: 'Jake', G1: 'Jon Rahm', G2:'Bryson DeChambeau'},\r\n        {name: 'Craig', G1: 'Xander Schauffele', G2:'Akshay Bhatia'},\r\n        {name: 'Terry', G1: 'Hideki Matsuyama', G2:'Shane Lowry'},\r\n        {name: 'Cole', G1: 'Jordan Spieth', G2:'Tiger Woods'},\r\n        {name: 'Binh', G1: 'Brooks Koepka', G2:'Collin Morikawa'},\r\n        {name: 'Cory', G1: 'Sahith Theegala', G2:'Tom Kim'},\r\n        {name: 'Colin', G1: 'Viktor Hovland', G2:'Tommy Fleetwood'},\r\n        {name: 'Aaron', G1: 'Joaquín Niemann', G2:'Tony Finau'},\r\n        {name: 'Joe', G1: 'Ludvig Åberg', G2:'Justin Thomas'},\r\n        {name: 'Phil', G1: 'Cameron Smith', G2:'Cameron Young'},\r\n        {name: 'Amy', G1: 'Wyndham Clark', G2:'Will Zalatoris'},\r\n        {name: 'Nate', G1: 'Matt Fitzpatrick', G2:'Dustin Johnson'},\r\n        {name: 'Mike', G1: 'Patrick Cantlay', G2:'Max Homa'}\r\n    ];\r\n\r\n    var dict = {};\r\n    // tslint:disable-next-line\r\n    // eslint-disable-next-line\r\n    data.data.player.map(x => dict[x.first_name + ' ' + (x.last_name == \"Åberg\" ? \"Åberg\" : x.last_name)] = x  )\r\n    console.log(dict);\r\n    players.forEach(function (x) {\r\n        var g1info = dict[x.G1];\r\n        var g2info = dict[x.G2];\r\n        console.log(g1info);\r\n        console.log(g2info);\r\n        x.G1R = g1info.pos;\r\n        x.G1Score = g1info.topar + ' (' + g1info.thru + ')';\r\n        x.G2R = g2info.pos;\r\n        x.G2Score = g2info.topar + ' (' + g2info.thru + ')';\r\n        x.G1Calc = parseInt(g1info.pos.replace('T',''))\r\n        x.G2Calc = parseInt(g2info.pos.replace('T',''))\r\n\r\n        console.log(g2info)\r\n        if(g1info.newStatus === 'C') {\r\n            x.G1Score = 'MC';\r\n            x.G1R = g1info.round2.total;\r\n            x.G1Calc = parseInt(x.G1R)\r\n        }\r\n\r\n        if(g2info.newStatus === 'C') {\r\n            x.G2Score = 'MC';\r\n            x.G2R = g2info.round2.total;\r\n            x.G2Calc = parseInt(x.G2R)\r\n        }\r\n\r\n        if(g2info.newStatus === \"W\") {\r\n            console.log(x)\r\n            x.G2R = 90\r\n            x.G2Score = 'WD'\r\n            x.G2Calc = 90\r\n        }\r\n        \r\n        x.AllUpScore = x.G1Calc + x.G2Calc\r\n        \r\n      });\r\n\r\n      return players.sort((a, b) => (a.AllUpScore > b.AllUpScore) ? 1 : -1);\r\n}\r\n\r\nclass myComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {leaderboard: null};  \r\n    }\r\n\r\n    componentDidMount() {\r\n        const apiUrl = 'https://www.masters.com/en_US/scores/feeds/2024/scores.json';\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((data) => this.setState({leaderboard: process(data)}));\r\n    }\r\n    \r\n    render() {\r\n        \r\n        if(this.state.leaderboard === null) {\r\n            return <h1>Loading...</h1>\r\n        }\r\n        \r\n       // const classes = useStyles();\r\n        return  <TableContainer component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell></StyledTableCell>\r\n              <StyledTableCell align=\"center\">Overall Score</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Golfer 1</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Score</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Rank</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Golfer 2</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Score</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Rank</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.leaderboard.map((row) => (\r\n              <StyledTableRow key={row.name}>\r\n                {row.G1R === '1' || row.G1R === 'T1' || row.G2R === 'T1' || row.G2R === '1' ? <WinnerCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </WinnerCell> : <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </StyledTableCell>}\r\n                <StyledTableCell align=\"center\">{row.AllUpScore}</StyledTableCell>\r\n                {row.G1Score === 'MC' ? <MCCell align=\"left\">{row.G1}</MCCell> : <StyledTableCell align=\"left\">{row.G1}</StyledTableCell>}\r\n                <StyledTableCell align=\"center\">{row.G1Score}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.G1R}</StyledTableCell>\r\n                {row.G2Score === 'MC' || row.G2Score === 'WD' ? <MCCell align=\"left\">{row.G2}</MCCell> : <StyledTableCell align=\"left\">{row.G2}</StyledTableCell>}\r\n                <StyledTableCell align=\"center\">{row.G2Score}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.G2R}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n        \r\n    }\r\n}\r\nexport default myComponent;","import Scoreboard from './components/Scoreboard'\nimport './App.css';\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <body>\n        <br></br>\n        <Container maxWidth=\"md\">   <Scoreboard></Scoreboard></Container>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}